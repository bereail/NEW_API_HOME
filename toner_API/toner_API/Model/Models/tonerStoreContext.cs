// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace toner_API.Models
{
    public partial class tonerStoreContext : DbContext
    {
        public tonerStoreContext()
        {
        }

        public tonerStoreContext(DbContextOptions<tonerStoreContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Carga> Carga { get; set; }
        public virtual DbSet<Rol> Rol { get; set; }
        public virtual DbSet<Service> Service { get; set; }
        public virtual DbSet<Toner> Toner { get; set; }
        public virtual DbSet<Users> Users { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Carga>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Cant).HasColumnName("cant");

                entity.Property(e => e.CargaAt)
                    .HasColumnType("datetime")
                    .HasColumnName("carga_at")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.IdService).HasColumnName("id_service");

                entity.Property(e => e.IdToner).HasColumnName("id_toner");

                entity.Property(e => e.IdUser).HasColumnName("id_user");

                entity.HasOne(d => d.IdTonerNavigation)
                    .WithMany(p => p.Carga)
                    .HasForeignKey(d => d.IdToner)
                    .HasConstraintName("FK__Carga__id_toner__4222D4EF");

                entity.HasOne(d => d.IdUserNavigation)
                    .WithMany(p => p.Carga)
                    .HasForeignKey(d => d.IdUser)
                    .HasConstraintName("FK__Carga__id_user__412EB0B6");
            });

            modelBuilder.Entity<Rol>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Description)
                    .HasMaxLength(20)
                    .HasColumnName("description");
            });

            modelBuilder.Entity<Service>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Name)
                    .HasMaxLength(150)
                    .IsUnicode(false)
                    .HasColumnName("name");
            });

            modelBuilder.Entity<Toner>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Cant).HasColumnName("cant");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(15)
                    .HasColumnName("name");

                entity.Property(e => e.Stock).HasColumnName("stock");
            });

            modelBuilder.Entity<Users>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.IdRol).HasColumnName("id_rol");

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("name");

                entity.Property(e => e.Pass)
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnName("pass");

                entity.HasOne(d => d.IdRolNavigation)
                    .WithMany(p => p.Users)
                    .HasForeignKey(d => d.IdRol)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Users__id_rol__398D8EEE");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}